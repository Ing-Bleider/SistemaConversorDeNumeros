
package gui;

import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import logica.Binario;
import logica.Decimal;
import logica.Hexadecimal;
import logica.Octal;
import logica.SeleccionDeSistema;

/**
 * @author Bleider Hernandez
 */
public class Dashboard extends javax.swing.JFrame {
        
    private Binario bin;
    private Octal oct;
    private Decimal dec;
    private Hexadecimal hexa;
    private boolean pasarMouse = false;
    private String items[] ; //= new String []{"BINARIO","OCTAL","DECIMAL","HEXADECIMAL"}; 

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        setTitle("Sistema de conversión");   
        items = new String []{"BINARIO","OCTAL","DECIMAL","HEXADECIMAL"}; 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboOrigen = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboDestino = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtIngreso = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtResultado = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("De:");

        jComboOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BINARIO", "OCTAL", "DECIMAL", "HEXADECIMAL" }));
        jComboOrigen.setSelectedIndex(-1);
        jComboOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboOrigenActionPerformed(evt);
            }
        });

        jLabel2.setText("A:");

        jComboDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BINARIO", "OCTAL", "DECIMAL", "HEXADECIMAL" }));
        jComboDestino.setSelectedIndex(-1);
        jComboDestino.setEnabled(false);
        jComboDestino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboDestinoMouseClicked(evt);
            }
        });
        jComboDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboDestinoActionPerformed(evt);
            }
        });

        jLabel3.setText("Digite número:");

        txtIngreso.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        txtIngreso.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIngreso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIngresoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIngresoKeyTyped(evt);
            }
        });

        jLabel4.setText("Resultado:");

        txtResultado.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        txtResultado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtResultado.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(txtIngreso)
                    .addComponent(jComboOrigen, 0, 238, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jComboDestino, 0, 219, Short.MAX_VALUE)
                    .addComponent(txtResultado))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtIngreso)
                    .addComponent(txtResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pulsarTeclaNumerica(KeyEvent evt, int indice) {
        //Declaramos una variable y le asignamos un evento
        char car = evt.getKeyChar();
        
        switch (indice) {
            case 0 -> {
                if ((car < '0' || car > '1') && (car != (char) KeyEvent.VK_BACK_SPACE)) {
                    evt.consume();
                }
            }            
            case 1 -> {
                if ((car < '0' || car > '7') && (car != (char) KeyEvent.VK_BACK_SPACE)) {
                    evt.consume();
                }
            }            
            case 2 -> {
                if ((car < '0' || car > '9') && (car != (char) KeyEvent.VK_BACK_SPACE)) {
                    evt.consume();
                }
            }            
            case 3 -> {
                if ((car < 'a' || car > 'f') && (car < 'A' || car > 'F') && (car < '0' || car > '9')
                        && (car != (char) KeyEvent.VK_BACK_SPACE) && (car != (char) KeyEvent.VK_SPACE)) {
                    evt.consume();
                }
            }          
        }
    }
    
    private void jComboOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboOrigenActionPerformed
        
        if (jComboOrigen.getSelectedIndex() > -1) {
            this.jComboDestino.setEnabled(true);
            agregarItems();
            txtIngreso.setText("");
        }    
        txtResultado.setText("");
    }//GEN-LAST:event_jComboOrigenActionPerformed
 
    private void txtIngresoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIngresoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            validarSistema(jComboOrigen.getSelectedIndex(), jComboDestino.getSelectedIndex());
        }
    }//GEN-LAST:event_txtIngresoKeyPressed

    private void jComboDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboDestinoActionPerformed
        // TODO add your handling code here:
        if (jComboDestino.getSelectedIndex() != -1) {
            txtResultado.setText("");
            if (!txtIngreso.getText().isEmpty()) {
                validarSistema(jComboOrigen.getSelectedIndex(), jComboDestino.getSelectedIndex());
            }
            txtIngreso.requestFocus();
        }
    }//GEN-LAST:event_jComboDestinoActionPerformed

    private void txtIngresoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIngresoKeyTyped
        // TODO add your handling code here:        
        pulsarTeclaNumerica(evt,jComboOrigen.getSelectedIndex());        
    }//GEN-LAST:event_txtIngresoKeyTyped

    private void jComboDestinoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboDestinoMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboDestinoMouseClicked

    private void agregarItems (){
        jComboDestino.removeAllItems();
        for (int i = 0; i < items.length; i++) {
            if (jComboOrigen.getSelectedIndex() != i && jComboOrigen.getSelectedIndex() != -1) {
                jComboDestino.addItem(items[i]);
            }
        }
    }
    
    private void validarSistema(int indiceIn, int indiceOut){

        switch (indiceIn) {
            case 0 -> { binarioAOtrosSistemas(indiceOut); } 
            case 1 -> { octalAOtrosSistemas(indiceOut); }
            case 2 -> { decimalAOtrosSistemas(indiceOut); }
            case 3 -> { hexadecimalAOtrosSistemas(indiceOut); }
        }
    }
    
    private void binarioAOtrosSistemas(int indice) {
        switch (indice) {
            case 0 -> {                
                bin = new Binario(txtIngreso.getText(), SeleccionDeSistema.OCTAL);
                txtResultado.setText(bin.binarioAOctal());
            }
            case 1 -> {
                bin = new Binario(txtIngreso.getText(), SeleccionDeSistema.DECIMAL);
                txtResultado.setText(bin.binarioADecimal());
            }
            case 2 -> {
                bin = new Binario(txtIngreso.getText(), SeleccionDeSistema.HEXADECIMAL);
                txtResultado.setText(bin.binarioAHexadecimal());
            }
        }
    }
    
    private void octalAOtrosSistemas(int indice) {
        switch (indice) {
            case 0 -> {                
                oct = new Octal(Integer.parseInt(txtIngreso.getText()), SeleccionDeSistema.BINARIO);
                txtResultado.setText(oct.octalABinario());
            }
            case 1 -> {
                oct = new Octal(Integer.parseInt(txtIngreso.getText()), SeleccionDeSistema.DECIMAL);
                txtResultado.setText(String.valueOf(oct.octalADecimal()));
            }
            case 2 -> {
                oct = new Octal(Integer.parseInt(txtIngreso.getText()), SeleccionDeSistema.HEXADECIMAL);
                txtResultado.setText(oct.octalAHexadecimal());
            }
        }
    }
    
    private void decimalAOtrosSistemas(int indice) {
        switch (indice) {
            case 0 -> {                
                dec = new Decimal(Integer.parseInt(txtIngreso.getText()), SeleccionDeSistema.BINARIO);
                txtResultado.setText(dec.decimalABinarioUOctal());
            }
            case 1 -> {
                dec = new Decimal(Integer.parseInt(txtIngreso.getText()), SeleccionDeSistema.OCTAL);
                txtResultado.setText(dec.decimalABinarioUOctal());
            }
            case 2 -> {
                dec = new Decimal(Integer.parseInt(txtIngreso.getText()), SeleccionDeSistema.HEXADECIMAL);
                txtResultado.setText(dec.decimalAHexadecimal());
            }
        }
    }
    
    private void hexadecimalAOtrosSistemas(int indice) {
        switch (indice) {
            case 0 -> {                
                hexa = new Hexadecimal(txtIngreso.getText(), SeleccionDeSistema.BINARIO);
                txtResultado.setText(hexa.hexadecimalABinario());
            }
            case 1 -> {
                hexa = new Hexadecimal(txtIngreso.getText(), SeleccionDeSistema.OCTAL);
                txtResultado.setText(hexa.hexadecimalAOctal());
            }
            case 2 -> {
                hexa = new Hexadecimal(txtIngreso.getText(), SeleccionDeSistema.DECIMAL);
                txtResultado.setText(hexa.hexadecimalADecimal());
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboDestino;
    private javax.swing.JComboBox<String> jComboOrigen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JTextField txtIngreso;
    private javax.swing.JTextField txtResultado;
    // End of variables declaration//GEN-END:variables
}
